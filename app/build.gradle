plugins {
	id "com.android.application"
	id "com.google.gms.google-services"
	id "com.google.firebase.crashlytics"
	id "com.facebook.react"
	id 'org.jetbrains.kotlin.android'
}

def reactNativeArchitectures() {
	def value = project.getProperties().get("reactNativeArchitectures")
	return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

android {
	namespace "com.mrboomdev.platformer"
	ndkVersion rootProject.ext.ndkVersion
	
	sourceSets {
		main {
			manifest.srcFile "AndroidManifest.xml"
			java.srcDirs = ["src/main/java"]
			aidl.srcDirs = ["src/main/java"]
			renderscript.srcDirs = ["src/main/java"]
			res.srcDirs = ["res"]
			assets.srcDirs = ["../assets"]
			jniLibs.srcDirs = ["libs"]
		}
	}
	
	defaultConfig {
		applicationId "com.mrboomdev.platformer"
		minSdkVersion 24
		targetSdkVersion 33
		compileSdk 33
		versionCode 12
		versionName "0.4.0"
		multiDexEnabled true
	}
	
	splits {
		abi {
			reset()
			enable false
			universalApk false
			//noinspection ChromeOsAbiSupport
			include (*reactNativeArchitectures())
		}
	}
	
	signingConfigs {
		debug {
			storeFile file("debug.keystore")
			storePassword "android"
			keyAlias "androiddebugkey"
			keyPassword "android"
		}
	}
	
	compileOptions {
		sourceCompatibility "11.0"
		targetCompatibility "11.0"
		coreLibraryDesugaringEnabled true
	}
	
	buildTypes {
		debug {
			applicationIdSuffix ".debug"
			versionNameSuffix "-debug"
			signingConfig signingConfigs.debug
		}
		
		release {
			versionNameSuffix "-release"
			signingConfig signingConfigs.debug
			minifyEnabled false
			shrinkResources false
			proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
		}
	}
}

repositories {
	google()
}

configurations { natives }

dependencies {
	/* Compatibility and local libraries */
	implementation fileTree(dir: "libs", include: ["*.jar"])
	implementation project(":game")
	implementation "androidx.core:core-ktx:1.10.1"

    //Due to some crazy shit, the compilation is broken on new versions
	//noinspection GradleDependency
	coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.8"
	
	/* Firebase */
	implementation platform("com.google.firebase:firebase-bom:31.1.1")
	implementation "com.google.firebase:firebase-crashlytics"
	implementation "com.google.firebase:firebase-messaging"
	implementation "com.google.firebase:firebase-analytics"
	implementation "com.google.android.gms:play-services-auth:20.5.0"
	
	/* Util libraries */
	implementation 'com.squareup.moshi:moshi:1.15.0'
	implementation "com.squareup.moshi:moshi-kotlin:1.15.0"
	implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.11"
	
	/* Android libraries */
	implementation "com.google.android.material:material:1.9.0"
	implementation "androidx.appcompat:appcompat:1.6.1"
	implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
	
	/* React Native */
	implementation "com.facebook.react:react-android"
	implementation "com.facebook.react:hermes-android"
	//noinspection GradleDynamicVersion
	implementation "org.webkit:android-jsc:+"
	
	/* LibGDX libraries */
	api "com.badlogicgames.gdx:gdx:$gdxVersion"
	implementation 'com.badlogicgames.gdx:gdx-ai:1.8.2'
	implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
	natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"

	implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	implementation "com.badlogicgames.box2dlights:box2dlights:1.4"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
	natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
	 
	implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
	natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
	natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
	natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
	natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
}

task copyDownloadableDepsToLibs(type: Copy) {
	from configurations.implementation
	into "libs"
}

task copyAndroidNatives() {
	doFirst {
		file("libs/armeabi/").mkdirs()
		file("libs/armeabi-v7a/").mkdirs()
		file("libs/arm64-v8a/").mkdirs()
		file("libs/x86_64/").mkdirs()
		file("libs/x86/").mkdirs()
		
		configurations.getByName("natives").copy().files.each { jar ->
			def outputDir = null
			if(jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
			if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
			if(jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
			if(jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
			if(jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
			if(outputDir != null) {
				copy {
					from zipTree(jar)
					into outputDir
					include "*.so"
				}
			}
		}
	}
}

tasks.whenTaskAdded { packageTask ->
	if (packageTask.name.contains("package")) {
		packageTask.dependsOn "copyAndroidNatives"
	}
}

task run(type: Exec) {
	def path
	def localProperties = project.file("../local.properties")
	if(localProperties.exists()) {
		Properties properties = new Properties()
		localProperties.withInputStream { instr ->
			properties.load(instr)
		}
		def sdkDir = properties.getProperty("sdk.dir")
		if(sdkDir) {
			path = sdkDir
		} else {
			path = "$System.env.ANDROID_HOME"
		}
	} else {
		path = "$System.env.ANDROID_HOME"
	}

	def adb = path + "/platform-tools/adb"
	commandLine "$adb", "shell", "am", "start", "-n", "com.mrboomdev.platformer/com.mrboomdev.platformer.GameDebugLauncher"
}

eclipse.project.name = "Binacty" + "-android"
//apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
//applyNativeModulesAppBuildGradle(project)